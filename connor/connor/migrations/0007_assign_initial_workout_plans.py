# Generated by Django 2.0.4 on 2018-04-12 18:59

from django.db import migrations
from django.contrib.auth.models import User

# FIXME: Theoretically, oje shouldn't import the model directly as it may be a
# newer version than this migration expects and we should use the historical
# version, but then it is impossible to add m2m relationships in the data
# migration. But for the scope of this task, we're ignoring this. Later on one
# might want to explore different options for initial data (f. ex. JSON
# fixtures)
from connor.models import WorkoutPlan


class Migration(migrations.Migration):
    """A data migration to assign initial Workout plans for initial users
    """

    def assign_initial_workout_plans(apps, schema_editor):

        # These Users were created during previous data migration:
        jd = User.objects.get(username='john_doe')
        ld = User.objects.get(username='linda_doe')
        md = User.objects.get(username='matthew_doe')

        # These Workout plans were created during previous data migration:
        weight_loss_plan = WorkoutPlan.objects.get(
            name="'7 day weight loss' plan",
        )
        starting_strength_program = WorkoutPlan.objects.get(
            name="The 'starting strength' program",
        )
        abs_beginners_plan = WorkoutPlan.objects.get(
            name='A plan for absolute beginners',
        )
        middle_aged_females_plan = WorkoutPlan.objects.get(
            name='Workout plan for middle-aged females',
        )

        jd.workoutplan_set.add(weight_loss_plan, starting_strength_program)
        print('\nAssigned {0} initial Workout plans to user: {1}'.format(
            jd.workoutplan_set.count(),
            jd.get_full_name()
        ))

        ld.workoutplan_set.add(middle_aged_females_plan)
        print('\nAssigned {0} initial Workout plans to user: {1}'.format(
            ld.workoutplan_set.count(),
            ld.get_full_name()
        ))

        md.workoutplan_set.add(abs_beginners_plan)
        print('\nAssigned {0} initial Workout plans to user: {1}'.format(
            md.workoutplan_set.count(),
            md.get_full_name()
        ))

    def unassign_initial_workout_plans(apps, schema_editor):
        pass

    dependencies = [
        ('connor', '0006_create_initial_workout_plans'),
        ('connor', '0015_auto_20180413_1707'),
    ]

    operations = [
        migrations.RunPython(
            assign_initial_workout_plans,
            unassign_initial_workout_plans
        ),
    ]
